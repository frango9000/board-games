name: Deploy

on:
  workflow_call:
    inputs:
      env:
        required: true
        type: string
      url:
        required: true
        type: string
      type:
        required: false
        type: string
        default: 'testing'
    secrets:
      HEROKU_API_KEY:
        required: true
      JIRA_URL:
        required: true
      JIRA_CLIENT_ID:
        required: true
      JIRA_CLIENT_SECRET:
        required: true
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Java 11
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'
          check-latest: true

      - name: Use Node 16
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Get branch names
        id: branch-name
        uses: tj-actions/branch-names@v5

      - name: Load Cache
        uses: frango9000/cache@main
        env:
          cache-key: ${{ runner.os }}-v2
        with:
          path: |
            ~/.m2
            ~/.npm
            ./node_modules
            ./node
          key: ${{ env.cache-key }}-${{ steps.branch-name.outputs.current_branch }}-${{ github.run_id }}
          restore-keys: |
            ${{ env.cache-key }}-${{ steps.branch-name.outputs.current_branch }}
            ${{ env.cache-key }}-development
            ${{ env.cache-key }}
          save-on-hit: true

      - name: Java Dependencies
        run: mvn -f apps/api/pom.xml dependency:resolve dependency:resolve-plugins

      - name: Node Dependencies
        run: yarn install

      - name: Set Deployment Status In Progress
        uses: bobheadxi/deployments@v1.1.0
        id: deployment
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          env: ${{ inputs.env }}

      - name: Deploy to Heroku
        uses: MansaGroup/nrwl-nx-action@v2.1.0
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        with:
          targets: deploy
          all: 'true'
          parallel: 'false'
          affected: 'false'
          args: '--configuration=${{ inputs.env }}'

      - name: Upload Deployed Artifact
        uses: actions/upload-artifact@v3
        with:
          name: production-package
          path: apps/api/target/*.jar

      - name: Update Deployment Status
        uses: bobheadxi/deployments@v1.1.0
        if: always()
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          env: ${{ steps.deployment.outputs.env }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          env_url: ${{ inputs.url }}

      - name: Failed Deployment
        if: failure()
        run: echo "DEPLOY_STATE=failed" >> $GITHUB_ENV

      - name: Successful Deployment
        if: success()
        run: echo "DEPLOY_STATE=successful" >> $GITHUB_ENV

      - name: Parse Jira Keys from All Commits
        id: jira_keys
        if: always()
        uses: HighwayThree/jira-extract-issue-keys@master
        with:
          is-pull-request: ${{ github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' }}
          parse-all-commits: ${{ github.event_name == 'push' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Confirm Deploy State and Jira Key Values
        if: always()
        run: |
          echo "DEPLOY_STATE: ${{env.DEPLOY_STATE}}"
          echo "Jira Keys: ${{steps.jira_keys.outputs.jira-keys}}"

      - name: Push Deployment Info to Jira
        if: steps.jira_keys.outputs.jira-keys != ''
        id: push_deployment_info_to_jira
        uses: HighwayThree/jira-upload-deployment-info@master
        with:
          cloud-instance-base-url: '${{ secrets.JIRA_URL }}'
          client-id: '${{ secrets.JIRA_CLIENT_ID }}'
          client-secret: '${{ secrets.JIRA_CLIENT_SECRET }}'
          deployment-sequence-number: '${{ github.run_id }}'
          update-sequence-number: '${{ github.run_id }}'
          issue-keys: "${{ steps.jira_keys.outputs.jira-keys }}"
          display-name: ${{ inputs.env }}
          url: ${{ inputs.url }}
          description: ${{ inputs.env }}
          last-updated: '${{github.event.head_commit.timestamp}}'
          label: ${{ inputs.env }}
          state: '${{env.DEPLOY_STATE}}'
          pipeline-id: '${{ github.repository }} ${{ github.workflow }}'
          pipeline-display-name: 'Workflow: ${{ github.workflow }} (#${{ github.run_number }})'
          pipeline-url: '${{github.event.repository.url}}/actions/runs/${{github.run_id}}'
          environment-id: ${{ inputs.env }}
          environment-display-name: ${{ inputs.env }}
          environment-type: ${{ inputs.type }}

      - name: Confirm Jira Deploy Output
        if: success()
        run: |
          echo "Jira Upload Deploy Info response: ${{steps.push_deployment_info_to_jira.outputs.response}}"
