name: Verify

on: [ push, pull_request ]

jobs:
  verify:
    runs-on: ubuntu-latest
    steps:
      - name: test echo
        run: echo "${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}"

      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Checkout PR target
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/checkout@v2.3.4
        with:
          ref: ${{ github.base_ref }}

      - name: Sync PR with target
        if: ${{ github.event_name == 'pull_request' }}
        run: git merge development

      - name: Use Java 11
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'
          check-latest: true

      - name: Use Node 14
        uses: actions/setup-node@v2.3.0
        with:
          node-version: '14'

      - name: Cache Node modules
        uses: actions/cache@v2.1.6
        env:
          cache-name: cache-node-modules-v3
        with:
          path: |
            ~/.npm
            ./node_modules
            ./node
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Cache Maven packages
        uses: actions/cache@v2.1.6
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Yarn Install
        run: yarn install

      - name: Prettier
        uses: MansaGroup/nrwl-nx-action@v2.1.0
        with:
          targets: format:check
          all: 'true'
          parallel: 'true'
          affected: 'false'

      - name: Lint
        uses: MansaGroup/nrwl-nx-action@v2.1.0
        with:
          targets: lint
          all: 'true'
          parallel: 'true'
          affected: 'false'

      - name: Test
        uses: MansaGroup/nrwl-nx-action@v2.1.0
        with:
          targets: test
          all: 'true'
          parallel: 'true'
          affected: 'false'

      - name: Build
        uses: MansaGroup/nrwl-nx-action@v2.1.0
        with:
          targets: build
          all: 'true'
          parallel: 'true'
          affected: 'false'

  deploy:
    runs-on: ubuntu-latest
    needs: verify
    if: github.ref == 'refs/heads/development' && github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Use Java 11
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'
          check-latest: true

      - name: Use Node 14
        uses: actions/setup-node@v2.3.0
        with:
          node-version: '14'

      - name: Cache Node modules
        uses: actions/cache@v2.1.6
        env:
          cache-name: cache-node-modules-v3
        with:
          path: |
            ~/.npm
            ./node_modules
            ./node
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Cache Maven packages
        uses: actions/cache@v2.1.6
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: start deployment
        uses: bobheadxi/deployments@v0.4.3
        id: deployment
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          env: development

      - name: Deploy to Heroku Dev
        uses: MansaGroup/nrwl-nx-action@v2.1.0
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        with:
          targets: deploy
          all: 'true'
          parallel: 'false'
          affected: 'false'

      - name: update deployment status
        uses: bobheadxi/deployments@v0.4.3
        if: always()
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          env_url: https://boiling-shore-06894.herokuapp.com/
